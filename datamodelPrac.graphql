type User {
  id: ID! @id
#회원가입
  email: String! @unique
  phoneNumber: Int! @unique
  lastName: String!
  firstName: String! @default(value: "")
  birthDate: DateTime!
  nickName: String! @unique
#로그인
  loginSecret:String
#정보등록
  avatar: String
  introduce: String
  location: String
#SNS 기능
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
#단골 > modeling 방식 택 일
  dangols: [Franchise!] @relation(name:"DangolList")
  dangols: [Dangol!] @relation(name:"DangolOfUser")

  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
#주변 음식점
  arounds: [Around!]!
#채팅 - 프랜차이즈 문의 채팅
  rooms: [FranchiseRoom!]!
#입점 업체 등록
  franchises:[Franchise!]! @relation(name:"OwnerOfFranchise")
#공유 음식점 등록
  shops:[Shop!]! @relation(name:"OwnerOfMyShop")
}

type Dangol {
  id: ID @id
  user: User @relation(name:"DangolOfUser")
  franchise: [Franchise!] @relation(name:"DangolOfFranchise")
}

type Post {
  id: ID! @id
  location: Franchise @relation(name:"FranchisePosts")
  taste: String
  user: User @relation(name:"PostsOfUser")
  file: [File!]! @relation(name:"FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
}

type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentOfPost")
}

type File {
  id: ID @id
  url: String!
  post: Post @relation(name:"FilesOfPost")
}
 
#-------------  입점 업체 Modeling  ----------

type Franchise {
  id: ID @id
  user: User! @relation(name:"OwnerOfFranchise")
  franchiseName: String! @relation(name:"FranchisePosts")
  sort: String!
  location: String
#메인 메뉴
  mainImage: String!
  mainMenuImage: String!
  mainMenuName: String!
  fullPrice: Int!
  salePrice: Int!
#서브 메뉴
  subMenus: [SubMenu!]! @relation(name:"SubMenu")
#화폐 발행
  coinIssue: Int! @default(0)
#업체 소개
  foodGuide: Sting!
  origin: String!
#단골
  dangols: [User!]! @relation(name:"DangolList")
  dangols: [Dangol!]! @relation(name:"DangolOfFranchise")
#대표 소개
  OwnerImage: String!
  OwnerName: String!
  OwnerPosition: String!
  OwnerCareer: String!
#팀원 소개
  members: [Member!] @relation(name:"MemberList")
#음식점 예약 > 공유 음식점 예약 정보 스키마 만들기

#이용 후기 >  커멘트
  
#채팅 > 점주와 채팅만 구현

#프랜차이즈 홍보 > 지금

#프랜차이즈 점주 등록 > 지금
}

type SubMenu {
  id: ID @id
  image: String
  name: String
  fullPrice: Int
  salePrice: Int
  franchise: Franchise @relation(name:"SubMenu")
}

type Member {
  id: ID @id
  image: String!
  name: String!
  position: String!
  career: String!
  franchise: Franchise @relation(name:"MemberList")
}

#------------- 점주 Modeling  ----------

type Owner {
  id: ID @id
  user: User @relation(name:"OwnerOfMyShop")
  
}
