type User {
  id: ID! @id
  avatar: String
  username: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  loginSecret:String
  profile: Profile @relation(onDelete: CASCADE)
  owner: Owner @relation(onDelete: CASCADE)
}

type Post {
  id: ID! @id
  location: String
  caption: String!
  user: User @relation(name: "PostsOfUser")
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
}

type Like {
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentOfPost")
}

type File {
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
}

type Message {
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
}

type Profile {
  id: ID! @id
  user: User!  @relation(link:TABLE)
  menuImage: String!
  menuName: String!
  fullPrice: Int!
  salePrice: Int!
  foodGuide: String!
  career: String!
  contact: String!
  sector: String!
  profileState: Int!

  shopName: String
  region: String
  classification: String
  mainImage: String
  submenus: [Submenu] @relation(name: "SubmenuOfProfile", onDelete: CASCADE)
  members: [Member] @relation(name: "MemberOfProfile", onDelete: CASCADE)
}

type Member {
  id: ID! @id
  profile: Profile! @relation(name: "MemberOfProfile")
  image: String!
  name: String!
  position: String!
  career: String!
}

type Submenu {
  id: ID! @id
  profile: Profile! @relation(name: "SubmenuOfProfile")
  menuImage: String!
  menuName: String!
  fullPrice: Int!
  salePrice: Int!
}


type Owner {
  id: ID! @id
  user: User! @relation(link:TABLE)
  shopImages: [ShopImage!] @relation(name: "ImagesOfOwner", onDelete: CASCADE)
#1차 신청
  location: String!
  registration: String!
  classification: String!
  contact: String!
  ownerState: Int!
}

type ShopImage {
  id: ID! @id
  owner: Owner! @relation(name:"ImagesOfOwner")
  type: IMAGE_TYPE
  url: String!
}

enum IMAGE_TYPE {
  EXTERIOR
  HALL
  KITCHEN
  TABLEWARE
  CLEANER
  ECT
}