type User {
  id: ID!
  avatar: String
  username: String!
  email: String!
  firstName: String
  lastName: String
  fullName: String
  isFollowing: Boolean!
  isSelf: Boolean!
  following: [User!]!
  followingCount: Int!
  followers: [User!]!
  followersCount: Int!
  posts: [Post!]!
  postsCount: Int!
  likes: [Like!]!
  dangols: [Dangol!]
  dangolCount: Int!
  comments: [Comment!]!
  rooms: [Room!]!
  loginSecret: String!
  createdAt: String
  updatedAt: String
  profile: Profile
  owner: Owner


}

type Post {
  id: ID! 
  tasting: String
  user: User!
  profile: Profile!
  isLiked:Boolean!
  files: [File!]!
  likes: [Like!]!
  comments: [Comment!]!
  likeCount: Int!
  createdAt: String
  updatedAt: String
}


type Dangol {
  id: ID! 
  user: User 
  profile: Profile 
}


type Like {
  id: ID! 
  user: User!
  post: Post!
  createdAt: String
  updatedAt: String
}

type Comment {
  id: ID! 
  text: String!
  user: User!
  post: Post!
  createdAt: String
  updatedAt: String
}

type File {
  id: ID! 
  url: String!
  post: Post!
  createdAt: String
  updatedAt: String
}

type Room {
  id: ID! 
  participants: [User!]!
  messages: [Message!]!
  createdAt: String
  updatedAt: String
}

type Message {
  id: ID! 
  text: String!
  from: User! 
  to: User!
  room: Room!
  createdAt: String
  updatedAt: String
}

type Profile {
  id: ID!
  user: User!
  dangols: [Dangol] 
  dangolCount: Int!
  isDangol: Boolean!
  isSelf: Boolean!
  classification: String!
  profileState: Int
  
  profileName: String
  sector: String
  token: Int
  
  mainImage: String
  foodGuide: String!
  contact: String!
  origin: String
  
  menuImage: String!
  menuName: String!
  fullPrice: Int!
  salePrice: Int!

  submenus: [Submenu]
  career: String!
  
  founderImage: String
  members: [Member] 

  #posts
  posts: [Post!]!
  createdAt: String
  updatedAt: String
}

type Member {
  id: ID!
  profile: Profile! 
  image: String
  name: String!
  position: String!
  career: String
}

type Submenu {
  id: ID! 
  profile: Profile! 
  menuImage: String!
  menuName: String!
  fullPrice: Int!
  salePrice: Int!
  createdAt: String
  updatedAt: String
}

type Owner {
  id: ID! 
  user: User! 
  shopImages: [ShopImage!] 

  address: String
  registration: String
  classification: String
  contact: String
  ownerState: Int

  #price
  calendar: [Price]!

  #total
  facility: Facility

  #scale: Int 
  chairs: Int
  tables: Int
  scale: Int 

  #description: String
  shopName: String
  district: String
  description: String
  precaution: String
  hashTag: String

  #rules: Int
  checkIn: Int
  checkOut: Int
  minReserve: Int

  #refund: Bool
  refundAgree: Boolean
}

type Price {
  id: ID!
  owner: Owner! 
  dateString: String!
  priceState: String!
}


type Facility {
  id: ID!
  owner: Owner! 
  #boxFridge
  size_25: Boolean 
  size_30: Boolean 
  size_45: Boolean 
  size_65: Boolean 
  fridgeBox_ect: Boolean 
  #fridge
  showcase: Boolean 
  table: Boolean 
  vat: Boolean 
  kimchi: Boolean 
  tuna: Boolean 
  wine: Boolean 
  ice_cream: Boolean 
  fridge_ect: Boolean 
  #fire
  lower_stove: Boolean 
  chinese_stove: Boolean 
  gas_stove: Boolean 
  house_stove: Boolean 
  induction: Boolean 
  fire_ect: Boolean 
  #griller
  fire_above: Boolean 
  fire_below: Boolean 
  charcoal: Boolean 
  griller_ect: Boolean 
  #griddle
  size_600: Boolean 
  size_900: Boolean 
  size_1200: Boolean 
  size_1500: Boolean 
  griddle_ect: Boolean 
  #fryer
  electric: Boolean 
  gas:Boolean 
  fryer_ect:Boolean 
  #oven
  deck: Boolean 
  convection: Boolean 
  steam_convection: Boolean 
  combi_steamer: Boolean 
  oven_ect: Boolean 
  #cafe
  espresso_machine: String
  coffee_bean_grinder: String
  roasting_machine: String
  ice_maker: String
  ice_shaver: String
  water_heater: String
  blender: String
  cafe_ect: String
  #electronic 
  rice_cooker: Boolean 
  soup_heater: Boolean 
  dish_washer: Boolean 
  microwave: Boolean 
  take_out_packer: Boolean 
  induction_small: Boolean 
  blender_small: Boolean 
  food_warmer: Boolean 
  dough_machine: Boolean 
  fermenter: Boolean 
  noodle_cooker: Boolean 
  noodle_maker: Boolean 
  pasta_noodle_maker: Boolean 
  cold_noodle_maker: Boolean 
  soda_dispenser: Boolean 
  soft_cone_machine: Boolean 
  beer_dispenser: Boolean 
  #tableware 
  spoon_holder: Boolean 
  napkin_holder: Boolean 
  seasoning_container: Boolean 
  wet_wipe: Boolean 
  opener: Boolean 
  spoon: Boolean 
  chopsticks: Boolean 
  fork: Boolean 
  knife: Boolean 
  tray: Boolean 
  water_bottle: Boolean 
  kettle: Boolean 
  portable_stove: Boolean 
  table_bell: Boolean 
  #container
  bowl_container: Boolean 
  stainless_vat: Boolean 
  soup_container: Boolean 
  plastic_vat: Boolean 
  glass_vat: Boolean 
  side_dish_container: Boolean 
  wash_basin: Boolean 
  take_out_container: Boolean 
  #glass
  beverage: Boolean 
  water: Boolean 
  mug: Boolean 
  soju: Boolean 
  sake: Boolean 
  kaoliang: Boolean 
  shot: Boolean 
  wine_glass: Boolean 
  champagne: Boolean 
  cocktail: Boolean 
  on_the_rock: Boolean 
  highball: Boolean 
  glass: Boolean 
  pitcher_500cc: Boolean 
  pitcher_2000cc: Boolean 
  pitcher_3000cc: Boolean 
  #serving 
  rice_bowl: Boolean 
  dish: Boolean 
  earthenware: Boolean 
  pottery: Boolean 
  stone_pot: Boolean 
  pot: Boolean 
  frying_pan: Boolean 
  side_dish_bowl: Boolean 
  small_dish: Boolean 
  bowl: Boolean 
  scissors: Boolean 
  ladle: Boolean 
  #cleaner 
  detergent: Boolean 
  clorox: Boolean 
  abstergent: Boolean 
  bloom: Boolean 
  dustpan: Boolean 
  floorcloth: Boolean 
  bucket: Boolean 
  hose: Boolean 
  brush: Boolean 
  vacuum_cleaner: Boolean 
  #ect
  speaker: Boolean 
  tv: Boolean 
  projector: Boolean 
  air_conditioner: Boolean 
  wifi: Boolean 
  cctv: Boolean 
  kiosk: Boolean 
  umbrella_stand: Boolean 
}

type ShopImage {
  id: ID! 
  owner: Owner! 
  type: IMAGE_TYPE
  url: String!
  createdAt: String
  updatedAt: String
}

enum IMAGE_TYPE {
  EXTERIOR
  HALL
  KITCHEN
  TABLEWARE
  CLEANER
  ECT
}